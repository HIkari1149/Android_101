from flask import Flask,request,render_template,jsonify
import urllib
from urllib.request import urlopen
import json
import math
import sqlite3

app = Flask(__name__)
def sql_select(lat,lng,minlat,maxlat,minlng,maxlng):
    # dbname='/home/Hikari1149/mysite/district.db'
    dbname='C:/Users/mac/Desktop/district.db'
    conn = sqlite3.connect(dbname)
    cur = conn.cursor()
    sql="SELECT lat,lon,Field_3,Field_4,Field_5,Field_1,Field_6,Field_7 FROM district WHERE lat > {} AND lat < {} AND lon > {} AND lon < {}".format(minlat,maxlat,minlng,maxlng)
    cur.execute(sql)
    reslut=cur.fetchall()
    sql2="SELECT lat,lon From cctv1 WHERE lat>{} AND lat< {} AND lon>{} AND lon <{}".format(minlat,maxlat,minlng,maxlng)
    cur.execute(sql2)
    res2=cur.fetchall()
    print(reslut)
    conn.close()
    return reslut,res2
def getGeoForAddress(address):
    serviceurl = 'https://maps.googleapis.com/maps/api/geocode/json?'
    while True:
        if len(address) < 1:break
        url = serviceurl + urllib.parse.urlencode({'sensor':'false','address':address,'key':'AIzaSyCjaVLvkHaNblbIMGug7xOaHUgdq-waOqE'})
        print('Retrieving:',url)
        uh = urllib.request.urlopen(url)
        data = uh.read()
        try: js = json.loads(data.decode())
        except: js = None
        if 'status' not in js or js['status'] != 'OK':
            print('===Failed To Retrieve===')
            print(data)
            continue
        lat = js['results'][0]['geometry']['location']['lat']
        lng = js['results'][0]['geometry']['location']['lng']
        return lat,lng
def get_area(latitude, longitude, dis):
    """
    确定查询经纬度范围
    :param latitude:中心纬度
    :param longitude:中心经度
    :param dis:半径
    :return:(minlat, maxlat, minlng, maxlng)
    """
    r = 6371.137
    dlng = 2 * math.asin(math.sin(dis / (2 * r)) / math.cos(latitude * math.pi / 180))
    dlng = dlng * 180 / math.pi
    dlat = dis / r
    dlat = dlat * 180 / math.pi
    minlat = latitude - dlat
    maxlat = latitude + dlat
    minlng = longitude - dlng
    maxlng = longitude + dlng
    return minlat, maxlat, minlng, maxlng
@app.route('/',methods=['GET','POST'])
def index():
    if (request.method == 'POST'):
        loc = request.form['location']
        lat, lng = getGeoForAddress(loc)
        res,res2 = sql_select(lat, lng, *get_area(lat, lng, 1.0))
        print(request.values)
        op = request.values.get('btn2')
        if (op == '热力图'):
            return render_template("Heatmap.html", loc=loc, lat=lat, lng=lng, res=res, Sz=len(res),res2=res2)
        else:
            return render_template("map2.html", loc=loc, lat=lat, lng=lng, res=res, Sz=len(res),res2=res2)
    else:
         return render_template('index2.html')
@app.route('/display')
def display():
    lat=request.args.get('a',0,type=float)
    lng=request.args.get('b',0,type=float)
    print(lat,lng)
    res,res2 = sql_select(lat, lng, *get_area(lat, lng, 1.0))
    #print(res)
    return jsonify(res)
@app.route('/func',methods=['GET','POST'])
def fun():
    return render_template("query.html")
@app.route('/test')
def test():
    return render_template("test1.html")
if __name__ == '__main__':
    app.run()

////////////
from flask import Flask,request,render_template,jsonify
import urllib
from urllib.request import urlopen
import json
import math
import sqlite3

app = Flask(__name__)
def sql_select(lat,lng,minlat,maxlat,minlng,maxlng):
    # dbname='/home/Hikari1149/mysite/district.db'
    dbname='C:/Users/mac/Desktop/district.db'
    conn = sqlite3.connect(dbname)
    cur = conn.cursor()
    sql="SELECT lat,lon,Field_3,Field_4,Field_5,Field_1,Field_6,Field_7 FROM district WHERE lat > {} AND lat < {} AND lon > {} AND lon < {}".format(minlat,maxlat,minlng,maxlng)
    cur.execute(sql)
    reslut=cur.fetchall()
    sql2="SELECT lat,lon From cctv1 WHERE lat>{} AND lat< {} AND lon>{} AND lon <{}".format(minlat,maxlat,minlng,maxlng)
    cur.execute(sql2)
    res2=cur.fetchall()
    print(reslut)
    conn.close()
    return reslut,res2
def getGeoForAddress(address):
    serviceurl = 'https://maps.googleapis.com/maps/api/geocode/json?'
    while True:
        if len(address) < 1:break
        url = serviceurl + urllib.parse.urlencode({'sensor':'false','address':address,'key':'AIzaSyCjaVLvkHaNblbIMGug7xOaHUgdq-waOqE'})
        print('Retrieving:',url)
        uh = urllib.request.urlopen(url)
        data = uh.read()
        try: js = json.loads(data.decode())
        except: js = None
        if 'status' not in js or js['status'] != 'OK':
            print('===Failed To Retrieve===')
            print(data)
            continue
        lat = js['results'][0]['geometry']['location']['lat']
        lng = js['results'][0]['geometry']['location']['lng']
        return lat,lng
def get_area(latitude, longitude, dis):
    """
    确定查询经纬度范围
    :param latitude:中心纬度
    :param longitude:中心经度
    :param dis:半径
    :return:(minlat, maxlat, minlng, maxlng)
    """
    r = 6371.137
    dlng = 2 * math.asin(math.sin(dis / (2 * r)) / math.cos(latitude * math.pi / 180))
    dlng = dlng * 180 / math.pi
    dlat = dis / r
    dlat = dlat * 180 / math.pi
    minlat = latitude - dlat
    maxlat = latitude + dlat
    minlng = longitude - dlng
    maxlng = longitude + dlng
    return minlat, maxlat, minlng, maxlng
@app.route('/',methods=['GET','POST'])
def index():
    if (request.method == 'POST'):
        loc = request.form['location']
        lat, lng = getGeoForAddress(loc)
        res,res2 = sql_select(lat, lng, *get_area(lat, lng, 1.0))
        print(request.values)
        op = request.values.get('btn2')
        if (op == '热力图'):
            return render_template("Heatmap.html", loc=loc, lat=lat, lng=lng, res=res, Sz=len(res),res2=res2)
        else:
            return render_template("map2.html", loc=loc, lat=lat, lng=lng, res=res, Sz=len(res),res2=res2)
    else:
         return render_template('index2.html')
@app.route('/display')
def display():
    lat=request.args.get('a',0,type=float)
    lng=request.args.get('b',0,type=float)
    print(lat,lng)
    res,res2 = sql_select(lat, lng, *get_area(lat, lng, 1.0))
    #print(res)
    return jsonify(res)
@app.route('/func',methods=['GET','POST'])
def fun():
    return render_template("query.html")
@app.route('/test')
def test():
    return render_template("test1.html")
if __name__ == '__main__':
    app.run()
/////
<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="">
    <meta name="author" content="">

 <!-- Bootstrap core CSS -->
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css" integrity="sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO" crossorigin="anonymous">

    <!-- Custom styles for this template -->
    <link href="/static/cover.css" rel="stylesheet">
    <title>Hikari1149</title>
      <link rel="stylesheet" href="https://unpkg.com/leaflet@1.3.4/dist/leaflet.css"
          integrity="sha512-puBpdR0798OZvTTbP4A8Ix/l+A4dHDD0DGqYW6RQ+9jxkRFclaxxQb/SJAWZfWAkuyeQUytO7+7N4QKrDh+drA=="
          crossorigin=""/>
    <script src="https://code.jquery.com/jquery-3.3.1.min.js"></script>
    <!-- Make sure you put this AFTER Leaflet's CSS -->
    <script src="https://unpkg.com/leaflet@1.3.4/dist/leaflet.js"
            integrity="sha512-nMMmRyTVoLYqjP9hrbed9S+FzjZHW5gY1TWCHA5ckwXZBadntCNs8kEqAWdrb9O7rxbCaA4lKTIWjDXZxflOcA=="
            crossorigin=""></script>



      <script src="static/myLoc.js"></script>
  </head>


  <body class="text-center">

    <div class="cover-container d-flex w-100 h-100 p-3 mx-auto flex-column">
      <header class="masthead mb-auto">
        <div class="inner">
          <h3 class="masthead-brand">大數據分析犯罪事件</h3>
          <nav class="nav nav-masthead justify-content-center">
            <a class="nav-link active" href="#">Home</a>
            <a class="nav-link" href="/func">Search</a>
            <a class="nav-link" href="/BC.pdf">Analysis</a>
          </nav>
        </div>
      </header>

      <main role="main" class="inner cover">
        <h1 class="cover-heading"></h1>
        <div id="location" style="color:red">
            Your loc will go here.
        </div>


      </main>
      <footer class="mastfoot mt-auto">
        <div class="inner">
            <div id="mapid" style="width:635px;height: 475px;margin-left: 0px">
</div>
        </div>
      </footer>
    </div>
    <div id="bdtts_div_id"></div>

    <!-- Bootstrap core JavaScript
    ================================================== -->
    <!-- Placed at the end of the document so the pages load faster -->




  </body>
</html>
////////////////////////////
<!DOCTYPE html>
<html lang="en">
<head>
   <title>Quick Start - Leaflet</title>

	<meta charset="utf-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1.0">

	<link rel="shortcut icon" type="image/x-icon" href="docs/images/favicon.ico" />

    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.3.3/dist/leaflet.css" integrity="sha512-Rksm5RenBEKSKFjgI3a41vrjkw4EVPlJ3+OiI65vTjIdo9brlAacEuKOiQ5OFh7cOI1bkDwLqdLw3Zg0cRJAAQ==" crossorigin=""/>
    <script src="https://unpkg.com/leaflet@1.3.3/dist/leaflet.js" integrity="sha512-tAGcCfR4Sc5ZP5ZoVz0quoZDYX5aCtEm/eu1KhSLj2c9eFrylXZknQYmxUssFaVJKvvc0dJQixhGjG2yXWiV9Q==" crossorigin=""></script>


</head>
<body>
 <div id="bdtts_div_id"></div>
 <div id="Tip">

 </div>
    <div id="mapid" style="width: 1500px; height: 650px;"></div>
  <script>

      alert("搜素成功");
function play(){
 var text = "注意! 当前所在地点盗窃事件频发,请小心保管个人物品";
 var ttsDiv = document.getElementById('bdtts_div_id');
 var au1 = '<audio id="tts_autio_id" autoplay="autoplay">';
 var sss = '<source id="tts_source_id" src="http://tts.baidu.com/text2audio?lan=zh&ie=UTF-8&spd=5&text='+text+'" type="audio/mpeg">';
 var eee = '<embed id="tts_embed_id" height="0" width="0" src="">';
 var au2 = '</audio>';
 ttsDiv.innerHTML = au1 + sss + eee + au2;
}
function GetDistance( lat1,  lng1,  lat2,  lng2){
    var radLat1 = lat1*Math.PI / 180.0;
    var radLat2 = lat2*Math.PI / 180.0;
    var a = radLat1 - radLat2;
    var  b = lng1*Math.PI / 180.0 - lng2*Math.PI / 180.0;
    var s = 2 * Math.asin(Math.sqrt(Math.pow(Math.sin(a/2),2) +
    Math.cos(radLat1)*Math.cos(radLat2)*Math.pow(Math.sin(b/2),2)));
    s = s *6378.137 ;// EARTH_RADIUS;
    s = Math.round(s * 10000) / 10000;
    return s;
}
var mymap = L.map('mapid').setView([{{ lat }}, {{ lng }}], 15);

L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4NXVycTA2emYycXBndHRqcmZ3N3gifQ.rJcFIG214AriISLbB6B5aw', {
		maxZoom: 20,
		attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, ' +
			'<a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, ' +
			'Imagery © <a href="https://www.mapbox.com/">Mapbox</a>',
		id: 'mapbox.streets'
	}).addTo(mymap);
var myIcon = L.icon({
    iconUrl: 'http://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|e85141&chf=a,s,ee00FFFF',
    //iconUrl:'',
    iconSize: [15, 20],
    iconAnchor: [22, 94],
    popupAnchor: [-3, -76],
    shadowSize: [68, 95],
    shadowAnchor: [22, 94]
});
var cctv_Icon=L.icon({
    iconUrl:'https://img.icons8.com/wired/50/000000/cool.png',
    //iconUrl: 'http://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|e85141&chf=a,s,ee00FFFF',
    iconSize: [34,42],
    iconAnchor: [22, 94],
    popupAnchor: [-3, -76],
    shadowSize: [68, 95],
    shadowAnchor: [22, 94]
});
var marker = L.marker([{{ lat }}, {{ lng }}]).addTo(mymap);
marker.bindPopup("<b>{{ loc }}!</b>.").openPopup();
var l=0,l2=0,dis=1e9,cctv_lat=0,cctv_lon=0;
      {%  for tmp in res %}
           var marker = L.marker([{{ tmp[0] }}, {{ tmp[1] }}],{icon:myIcon}).addTo(mymap);


            if(typeof ({{ tmp[2] }}) != "undefined")
            {
                l++;

                    var year = {{ tmp[2] }}+1911;
                    marker.bindPopup("盗窃类型:{{ tmp[5] }}" + "<br>" + "管辖单位:{{ tmp[6] }} {{ tmp[7] }}" + "<br>" + "<b>盗窃发生时间" + year + "年{{ tmp[3] }}月{{ tmp[4] }}日!</b>.").openPopup();
                    console.log({{ tmp[0] }}, {{ tmp[1] }});

            }
      {% endfor %}
      {% for tmp in res2 %}
        l2++;
        var d=GetDistance({{ lat }},{{ lng }},{{ tmp[0] }},{{ tmp[1] }});
        //var marker=L.marker=( [{{ tmp[0] }},{{ tmp[1] }}],{icon:cctv_Icon}).addTo(mymap);
        var marker=L.marker([{{ tmp[0] }},{{ tmp[1] }}],{icon:cctv_Icon}).addTo(mymap);

        marker.bindPopup("<b>监控!</b>.").openPopup();
        if(dis>d){
            cctv_lat={{ tmp[0] }};
            cctv_lon={{ tmp[1] }};
            dis=d;
        }
      {% endfor %}
       if(dis!=1e9){
           var marker=L.marker([cctv_lat,cctv_lon],{icon:cctv_Icon}).addTo(mymap);
           marker.bindPopup("<b>距离最近的CCTV</b>.").openPopup();
       }
  if(l>=10){
      play();
  }
    var div=document.getElementById("Tip");
       l2=l2-1;
    div.innerHTML="<h1>过去3年来该地点附近发生"+l+"件盗窃事件!"+"<br>附近有"+l2+"个监视器</h1>";
  </script>
</body>
</html>
///////////////////////////////////////
<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="">
    <meta name="author" content="">

 <!-- Bootstrap core CSS -->
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css" integrity="sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO" crossorigin="anonymous">

    <!-- Custom styles for this template -->
    <link href="/static/cover.css" rel="stylesheet">
    <title>Hikari1149</title>
      <link rel="stylesheet" href="https://unpkg.com/leaflet@1.3.4/dist/leaflet.css"
          integrity="sha512-puBpdR0798OZvTTbP4A8Ix/l+A4dHDD0DGqYW6RQ+9jxkRFclaxxQb/SJAWZfWAkuyeQUytO7+7N4QKrDh+drA=="
          crossorigin=""/>
    <script src="https://code.jquery.com/jquery-3.3.1.min.js"></script>
    <!-- Make sure you put this AFTER Leaflet's CSS -->
    <script src="https://unpkg.com/leaflet@1.3.4/dist/leaflet.js"
            integrity="sha512-nMMmRyTVoLYqjP9hrbed9S+FzjZHW5gY1TWCHA5ckwXZBadntCNs8kEqAWdrb9O7rxbCaA4lKTIWjDXZxflOcA=="
            crossorigin=""></script>



      <script src="static/myLoc.js"></script>
  </head>


  <body class="text-center">

    <div class="cover-container d-flex w-100 h-100 p-3 mx-auto flex-column">
      <header class="masthead mb-auto">
        <div class="inner">
          <h3 class="masthead-brand">大數據分析犯罪事件</h3>
          <nav class="nav nav-masthead justify-content-center">
            <a class="nav-link" href="/">Home</a>
            <a class="nav-link active" href="/func">Search</a>
            <a class="nav-link" href="/analysis">Analysis</a>
          </nav>
        </div>
      </header>

      <main role="main" class="inner cover">
        <h1 class="cover-heading">Search</h1>
         <form method="POST" action="/">
            <div class ="form-group" style="height: 350px;">
                <input type="text" name="location" style="width: 450px; height: 35px">

            <input class = "btn btn-primary" type="submit" name="btn1"value="标点图"style="width: 190px;height: 38.5px;">
            <input class = "btn btn-primary" type="submit" name="btn2"value="热力图"style="width: 190px;height: 38.5px;">
            </div>
        </form>


      </main>
      <footer class="mastfoot mt-auto">
        <div class="inner">
</div>
        </div>
      </footer>
    </div>
    <div id="bdtts_div_id"></div>

    <!-- Bootstrap core JavaScript
    ================================================== -->
    <!-- Placed at the end of the document so the pages load faster -->




  </body>
</html>
//////////////////////////////////////////////
<!DOCTYPE html>
<html lang="en">
<head>
   <title>Quick Start - Leaflet</title>

	<meta charset="utf-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1.0">

	<link rel="shortcut icon" type="image/x-icon" href="docs/images/favicon.ico" />

    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.3.3/dist/leaflet.css" integrity="sha512-Rksm5RenBEKSKFjgI3a41vrjkw4EVPlJ3+OiI65vTjIdo9brlAacEuKOiQ5OFh7cOI1bkDwLqdLw3Zg0cRJAAQ==" crossorigin=""/>
    <script src="https://unpkg.com/leaflet@1.3.3/dist/leaflet.js" integrity="sha512-tAGcCfR4Sc5ZP5ZoVz0quoZDYX5aCtEm/eu1KhSLj2c9eFrylXZknQYmxUssFaVJKvvc0dJQixhGjG2yXWiV9Q==" crossorigin=""></script>
    <script src="static/leaflet-heat.js"></script>

</head>
<body>
   <div id="bdtts_div_id"></div>
    <h1>查詢位置為 {{ loc }} 發生的盜竊案數量{{ Sz }}</h1>
    <div id="mapid" style="width: 1500px; height: 650px;"></div>
  <script>
      function play(){
 var text = "注意! 当前所在地点盗窃事件频发,请小心保管个人物品";
 var ttsDiv = document.getElementById('bdtts_div_id');
 var au1 = '<audio id="tts_autio_id" autoplay="autoplay">';
 var sss = '<source id="tts_source_id" src="http://tts.baidu.com/text2audio?lan=zh&ie=UTF-8&spd=5&text='+text+'" type="audio/mpeg">';
 var eee = '<embed id="tts_embed_id" height="0" width="0" src="">';
 var au2 = '</audio>';
 ttsDiv.innerHTML = au1 + sss + eee + au2;
}
      alert("搜素成功")
var mymap = L.map('mapid').setView([{{ lat }}, {{ lng }}], 15);
L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4NXVycTA2emYycXBndHRqcmZ3N3gifQ.rJcFIG214AriISLbB6B5aw', {
		maxZoom: 20,
		attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, ' +
			'<a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, ' +
			'Imagery © <a href="https://www.mapbox.com/">Mapbox</a>',
		id: 'mapbox.streets'
	}).addTo(mymap);
     addressPoints=[];
    var i=0,l=0;
     {%  for tmp in res %}
         l++;
          addressPoints[i]=[{{ tmp[0] }},{{ tmp[1] }}];
          i++;
     {% endfor %}
    addressPoints = addressPoints.map(function (p) { return [p[0], p[1],7.5];});
    var heat = L.heatLayer(addressPoints).addTo(mymap);
    if(l>10)    play();

  </script>
</body>
</html>
//////////////////////////////////////////////
/*
 * Globals
 */

/* Links */
a,
a:focus,
a:hover {
  color: #fff;
}

/* Custom default button */
.btn-secondary,
.btn-secondary:hover,
.btn-secondary:focus {
  color: #333;
  text-shadow: none; /* Prevent inheritance from `body` */
  background-color: #fff;
  border: .05rem solid #fff;
}


/*
 * Base structure
 */

html,
body {
  height: 100%;
  background-color: #333;
}

body {
  display: -ms-flexbox;
  display: flex;
  color: #fff;
  text-shadow: 0 .05rem .1rem rgba(0, 0, 0, .5);
  box-shadow: inset 0 0 5rem rgba(0, 0, 0, .5);
}

.cover-container {
  max-width: 42em;
}


/*
 * Header
 */
.masthead {
  margin-bottom: 2rem;
}

.masthead-brand {
  margin-bottom: 0;
}

.nav-masthead .nav-link {
  padding: .25rem 0;
  font-weight: 700;
  color: rgba(255, 255, 255, .5);
  background-color: transparent;
  border-bottom: .25rem solid transparent;
}

.nav-masthead .nav-link:hover,
.nav-masthead .nav-link:focus {
  border-bottom-color: rgba(255, 255, 255, .25);
}

.nav-masthead .nav-link + .nav-link {
  margin-left: 1rem;
}

.nav-masthead .active {
  color: #fff;
  border-bottom-color: #fff;
}

@media (min-width: 48em) {
  .masthead-brand {
    float: left;
  }
  .nav-masthead {
    float: right;
  }
}


/*
 * Cover
 */
.cover {
  padding: 0 1.5rem;
}
.cover .btn-lg {
  padding: .75rem 1.25rem;
  font-weight: 700;
}


/*
 * Footer
 */
.mastfoot {
  color: rgba(255, 255, 255, .5);
}

//////////////////////////////////
/*
 (c) 2014, Vladimir Agafonkin
 simpleheat, a tiny JavaScript library for drawing heatmaps with Canvas
 https://github.com/mourner/simpleheat
*/
!function(){"use strict";function t(i){return this instanceof t?(this._canvas=i="string"==typeof i?document.getElementById(i):i,this._ctx=i.getContext("2d"),this._width=i.width,this._height=i.height,this._max=1,void this.clear()):new t(i)}t.prototype={defaultRadius:25,defaultGradient:{.4:"blue",.6:"cyan",.7:"lime",.8:"yellow",1:"red"},data:function(t,i){return this._data=t,this},max:function(t){return this._max=t,this},add:function(t){return this._data.push(t),this},clear:function(){return this._data=[],this},radius:function(t,i){i=i||15;var a=this._circle=document.createElement("canvas"),s=a.getContext("2d"),e=this._r=t+i;return a.width=a.height=2*e,s.shadowOffsetX=s.shadowOffsetY=200,s.shadowBlur=i,s.shadowColor="black",s.beginPath(),s.arc(e-200,e-200,t,0,2*Math.PI,!0),s.closePath(),s.fill(),this},gradient:function(t){var i=document.createElement("canvas"),a=i.getContext("2d"),s=a.createLinearGradient(0,0,0,256);i.width=1,i.height=256;for(var e in t)s.addColorStop(e,t[e]);return a.fillStyle=s,a.fillRect(0,0,1,256),this._grad=a.getImageData(0,0,1,256).data,this},draw:function(t){this._circle||this.radius(this.defaultRadius),this._grad||this.gradient(this.defaultGradient);var i=this._ctx;i.clearRect(0,0,this._width,this._height);for(var a,s=0,e=this._data.length;e>s;s++)a=this._data[s],i.globalAlpha=Math.max(a[2]/this._max,t||.05),i.drawImage(this._circle,a[0]-this._r,a[1]-this._r);var n=i.getImageData(0,0,this._width,this._height);return this._colorize(n.data,this._grad),i.putImageData(n,0,0),this},_colorize:function(t,i){for(var a,s=3,e=t.length;e>s;s+=4)a=4*t[s],a&&(t[s-3]=i[a],t[s-2]=i[a+1],t[s-1]=i[a+2])}},window.simpleheat=t}(),/*
 (c) 2014, Vladimir Agafonkin
 Leaflet.heat, a tiny and fast heatmap plugin for Leaflet.
 https://github.com/Leaflet/Leaflet.heat
*/
    L.HeatLayer=(L.Layer?L.Layer:L.Class).extend({initialize:function(t,i){this._latlngs=t,L.setOptions(this,i)},setLatLngs:function(t){return this._latlngs=t,this.redraw()},addLatLng:function(t){return this._latlngs.push(t),this.redraw()},setOptions:function(t){return L.setOptions(this,t),this._heat&&this._updateOptions(),this.redraw()},redraw:function(){return!this._heat||this._frame||this._map._animating||(this._frame=L.Util.requestAnimFrame(this._redraw,this)),this},onAdd:function(t){this._map=t,this._canvas||this._initCanvas(),t._panes.overlayPane.appendChild(this._canvas),t.on("moveend",this._reset,this),t.options.zoomAnimation&&L.Browser.any3d&&t.on("zoomanim",this._animateZoom,this),this._reset()},onRemove:function(t){t.getPanes().overlayPane.removeChild(this._canvas),t.off("moveend",this._reset,this),t.options.zoomAnimation&&t.off("zoomanim",this._animateZoom,this)},addTo:function(t){return t.addLayer(this),this},_initCanvas:function(){var t=this._canvas=L.DomUtil.create("canvas","leaflet-heatmap-layer leaflet-layer"),i=L.DomUtil.testProp(["transformOrigin","WebkitTransformOrigin","msTransformOrigin"]);t.style[i]="50% 50%";var a=this._map.getSize();t.width=a.x,t.height=a.y;var s=this._map.options.zoomAnimation&&L.Browser.any3d;L.DomUtil.addClass(t,"leaflet-zoom-"+(s?"animated":"hide")),this._heat=simpleheat(t),this._updateOptions()},_updateOptions:function(){this._heat.radius(this.options.radius||this._heat.defaultRadius,this.options.blur),this.options.gradient&&this._heat.gradient(this.options.gradient),this.options.max&&this._heat.max(this.options.max)},_reset:function(){var t=this._map.containerPointToLayerPoint([0,0]);L.DomUtil.setPosition(this._canvas,t);var i=this._map.getSize();this._heat._width!==i.x&&(this._canvas.width=this._heat._width=i.x),this._heat._height!==i.y&&(this._canvas.height=this._heat._height=i.y),this._redraw()},_redraw:function(){var t,i,a,s,e,n,h,o,r,d=[],_=this._heat._r,l=this._map.getSize(),m=new L.Bounds(L.point([-_,-_]),l.add([_,_])),c=void 0===this.options.max?1:this.options.max,u=void 0===this.options.maxZoom?this._map.getMaxZoom():this.options.maxZoom,f=1/Math.pow(2,Math.max(0,Math.min(u-this._map.getZoom(),12))),g=_/2,p=[],v=this._map._getMapPanePos(),w=v.x%g,y=v.y%g;for(t=0,i=this._latlngs.length;i>t;t++)if(a=this._map.latLngToContainerPoint(this._latlngs[t]),m.contains(a)){e=Math.floor((a.x-w)/g)+2,n=Math.floor((a.y-y)/g)+2;var x=void 0!==this._latlngs[t].alt?this._latlngs[t].alt:void 0!==this._latlngs[t][2]?+this._latlngs[t][2]:1;r=x*f,p[n]=p[n]||[],s=p[n][e],s?(s[0]=(s[0]*s[2]+a.x*r)/(s[2]+r),s[1]=(s[1]*s[2]+a.y*r)/(s[2]+r),s[2]+=r):p[n][e]=[a.x,a.y,r]}for(t=0,i=p.length;i>t;t++)if(p[t])for(h=0,o=p[t].length;o>h;h++)s=p[t][h],s&&d.push([Math.round(s[0]),Math.round(s[1]),Math.min(s[2],c)]);this._heat.data(d).draw(this.options.minOpacity),this._frame=null},_animateZoom:function(t){var i=this._map.getZoomScale(t.zoom),a=this._map._getCenterOffset(t.center)._multiplyBy(-i).subtract(this._map._getMapPanePos());L.DomUtil.setTransform?L.DomUtil.setTransform(this._canvas,a,i):this._canvas.style[L.DomUtil.TRANSFORM]=L.DomUtil.getTranslateString(a)+" scale("+i+")"}}),L.heatLayer=function(t,i){return new L.HeatLayer(t,i)};
    ///////////////////////////////
    
